{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","about","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","prototypes","PropTypes","string","isRequired","defaultProps","App","setMode","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f776d9dd.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">{props.about}</a>\r\n            </li>\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n</div>\r\n          </div>\r\n        </div>\r\n    </nav>\r\n      )\r\n}\r\n\r\n      Navbar.prototypes = {\r\n        title: PropTypes.string.isRequired,\r\n      about: PropTypes.string.isRequired,\r\n}\r\n\r\n      Navbar.defaultProps = {\r\n        title: 'Set Title',\r\n  // about: 'About Text Here',\r\n}","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    \r\n    const [text, setText] = useState('')\r\n   \r\n    const handleUpClick = () =>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const handleLoClick = () =>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const handleClearClick = () =>{\r\n        let newText = ('');\r\n        setText(newText);\r\n    }\r\n\r\n    const handleCopy = () =>{\r\n        let text = document.getElementById('myBox');\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n\r\n    const handleExtraSpaces = () =>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n    }\r\n\r\n\r\n    const handleOnChange = (event) =>{\r\n        setText(event.target.value);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"container\" style= {{color:props.mode==='dark'?'white':'black'}}>\r\n         <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" id=\"myBox\" value={text} onChange={handleOnChange} style = {{backgroundColor:props.mode==='dark'?'#042743':'white',  color: props.mode==='dark'?'white':'black'}} rows=\"8\"></textarea>\r\n            </div> \r\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n            <button className=\"btn btn-primary\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Spaces</button>\r\n        </div>\r\n        <div className=\"container my-3\" style= {{color:props.mode==='dark'?'white':'black'}}>\r\n            <h2>Your Text Summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes Read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\nfunction App() {\n\nconst [mode, setMode] = useState('light');\n\nconst toggleMode = ()=>{\n  if (mode=== 'light')\n  {\n    setMode('dark');\n    document.body.style.backgroundColor = '#042743';\n  }\n  else{\n    setMode('light');\n    document.body.style.backgroundColor = 'white';\n\n  }\n}\n  return (\n    <>\n\n    <Navbar title=\"SparkText\" mode={mode} toggleMode={toggleMode}/>\n    <div className=\"container my-3\">\n    <TextForm heading=\"Enter The Text to Analyze\" mode={mode}/>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}